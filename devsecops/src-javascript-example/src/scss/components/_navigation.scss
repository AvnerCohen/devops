.navigation {
  $root: &;

  transition: background-color 400ms ease-in-out;
  display: block;
  z-index: 1000;

  &__inner {
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
  }

  &__list {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    list-style: none;
    overflow: auto;
    padding: 0;
    margin: 0;

    @include respond-to('small-max') {
      margin-left: #{-1 * $gutter};
      margin-right: #{-1 * $gutter};
    }
  }

  &__element {
    flex: 0 0 auto;

    &.opened,
    &.active {
      #{$root}__link {
        &::after {
          opacity: 1;
        }
      }
    }

    &--desktop {
      display: none;

      @include respond-to("medium") {
        display: block;
      }
    }
  }

  &__link {
    $link: &;

    @include font("caption");

    position: relative;
    display: block;
    padding: size(2) size(2) size(1.5);
    text-transform: uppercase;
    text-decoration: none;
    overflow: hidden;
    color: get-theme-color($currentTheme, "header-color-main");

    @include respond-to('small-max') {
      @at-root {
        @each $section, $color in $category-map {
          .section-#{$section} & {
            color: get-theme-color($currentTheme, "header-color-" + $color);

            &:hover,
            &:focus,
            &:active {
              color: get-theme-color($currentTheme, "header-color-" + $color);
            }

            &:after {
              @include respond-to('small-max') {
                background-color: get-theme-color($currentTheme, "header-color-" + $color);
              }
            }
          }
        }
      }
    }

    @include respond-to('small') {
      color: $color-gray-dark;

      &:hover,
      &:focus,
      &:active {
        color: $color-gray-dark;

        &:after {
          opacity: 1;
        }
      }
    }

    @each $section, $color in $category-map {
      &#{$link}--#{$section}::after {
        @include respond-to('small') {
          background-color: get-theme-color($currentTheme, $color);
        }
      }
    }

    &:hover,
    &:focus,
    &:active {
      color: $color-gray;
    }

    &::after {
      transition: opacity 250ms ease-in-out, transform 150ms ease-in-out;
      display: block;
      position: absolute;
      bottom: 0;
      left: size(1);
      height: size(0.5);
      width: calc(100% - #{size(2)});
      background-color: get-theme-color($currentTheme, "header-color-main");
      content: '';
      opacity: 0;
      pointer-events: none;
    }

    &--has-icon {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
    }

    @include respond-to("small") {
      @include font("small");

      color: $color-gray-dark;
      padding-top: size(1);
      padding-bottom: size(1);
    }
  }

  &__link-icon {
    display: block;
    vertical-align: middle;
    margin-left: size(1);
    width: size(2.5);
    height: size(2.5);
    pointer-events: none;
  }

  &__logo {
    padding: size(1) 0;
  }

  &__addition {
    display: none;

    &--left,
    &--right {
      position: absolute;
      bottom: 0;
    }

    &--left {
      left: 0;
    }

    &--right {
      right: 0;
    }

    @include respond-to("medium") {
      display: block;
      height: 100%;
    }
  }

  &__action {
    transition: color 250ms ease-in-out, fill 250ms ease-in-out;
    padding: size(1);
    display: block;
    fill: $color-slate-grey;
    color: $color-slate-grey;
    text-decoration: none;

    &:focus,
    &:active {
      outline: none;
      fill: $color-gray-dark;
      color: $color-gray-dark;
    }

    &:hover {
      color: $color-slate-grey;
    }

    .icon {
      width: size(2.5);
      height: size(2.5);
    }
  }
}
